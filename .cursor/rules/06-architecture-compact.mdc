---
id: architecture-file-placement-compact
type: compact
alwaysApply: true
---

# Architecture File Placement

<architecture_placement>

Read full reference: `.cursor/docs/architecture.md` for detailed architecture types.

## Golden Rule

**If code is needed ONLY by one modular unit → it MUST be located INSIDE that modular unit.**

## File Placement Quick Reference

| **What to create?**   | **Simple structure** | **Complex structure**                 |
| --------------------- | -------------------- | ------------------------------------- |
| TypeScript type       | `types.ts`           | `model/types/main.ts`                 |
| Zod schema            | `schemas.ts`         | `model/schemas/main.ts`               |
| Constant              | `constants.ts`       | `model/constants/main.ts`             |
| Pure function         | `helpers.ts`         | `lib/helpers/func/index.ts`           |
| React hook            | `hooks.ts`           | `lib/hooks/hook-name/index.ts`        |
| File operations       | `file.ts`            | `services/adapters/file/index.ts`     |
| localStorage          | `storage.ts`         | `services/gateways/storage/index.ts`  |
| Business logic        | `process.ts`         | `services/workflows/process/index.ts` |
| HTTP request          | `endpoints.ts`       | `api/endpoint/index.ts`               |
| React component       | `component.tsx`      | `ui/component/index.tsx`              |

**Note:** In `model` layer: `constants/`, `schemas/`, `types/` are container folders (NOT modular units). Actual modular units are `main.ts` files inside.

## Facade Rules (MANDATORY)

1. All modular units MUST have facade `index.ts/tsx`
2. Named exports ONLY - `export { validateInput }` not `export default`
3. Facades = ONLY re-exports (≤10 lines) - `export { fn } from './fn'`
4. NO function definitions or logic in facades
5. Export minimal public API - hide internal details

## Forbidden Practices

❌ **FORBIDDEN:**

1. Default exports (exception: Storybook)
2. Direct imports from internal parts of modular units
3. Export of auxiliary elements (helpers used only by main function)
4. God facades with multiple functions or logic
5. Scattering related code across different folders

<completion_criteria>
All files placed according to Golden Rule, facades present, named exports used.
</completion_criteria>

</architecture_placement>
