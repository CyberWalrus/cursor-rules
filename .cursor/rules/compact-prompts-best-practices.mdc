---
id: compact-prompts-best-practices
type: reference
use_cases: ['compact_prompt_design', 'prompt_optimization', 'performance_tuning']
prompt_language: en
response_language: ru
alwaysApply: false
---

# Compact Prompts: Best Practices

[REFERENCE-BEGIN]

## TIER 1: Expert Role

<expert_role>
You are a prompt engineering expert specializing in ultra-compact prompt optimization. Your expertise covers performance tuning, token economy, and structural minimalism for routing, detection, and simple classification tasks.

This reference documents 10 empirically validated rules for compact prompts based on real optimization experience (103‚Üí15 lines, -85% reduction), analysis of 5 optimization reports, Web Search 2024-2025, Anthropic Courses, and Prompt Engineering Guide.

**–í–ê–ñ–ù–û: –í—Å–µ –æ—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.**
</expert_role>

## TIER 2: Criteria & Anatomy

<use_cases>

**Compact –ø—Ä–æ–º–ø—Ç—ã –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã –¥–ª—è:**

- ‚úÖ –†–æ—É—Ç–∏–Ω–≥ –∏ –¥–µ—Ç–µ–∫—Ü–∏—è (—Ä–µ–∂–∏–º—ã, —Å–æ—Å—Ç–æ—è–Ω–∏—è, —É—Å–ª–æ–≤–∏—è)
- ‚úÖ –ü—Ä–æ—Å—Ç—ã–µ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ (1-3 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
- ‚úÖ –ë—ã—Å—Ç—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ (boolean logic)
- ‚úÖ –ê—Ç–æ–º–∞—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (–æ–¥–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ = –æ–¥–∏–Ω –ø—Ä–æ–º–ø—Ç)
- ‚úÖ –¶–µ–ª–µ–≤–æ–π —Ä–∞–∑–º–µ—Ä: **5-100 —Å—Ç—Ä–æ–∫** (–æ–ø—Ç–∏–º—É–º **10-25** –¥–ª—è —Ä–æ—É—Ç–µ—Ä–æ–≤)

**–ó–∞–¥–∞—á–∏, —Ä–µ—à–∞–µ–º—ã–µ –∑–∞ 1-3 —à–∞–≥–∞:**

- Check condition ‚Üí Execute action
- Detect mode ‚Üí Load config
- Validate input ‚Üí Return result

</use_cases>

<anti_patterns>

**Compact –ù–ï –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è:**

- ‚ùå –ú–Ω–æ–≥–æ—à–∞–≥–æ–≤—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã (>5 —à–∞–≥–æ–≤ —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏)
- ‚ùå –°–ª–æ–∂–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ (—É—Å–ª–æ–≤–∏—è –≤–Ω—É—Ç—Ä–∏ —É—Å–ª–æ–≤–∏–π)
- ‚ùå –î–µ—Ç–∞–ª—å–Ω–æ–µ exception handling (–º–Ω–æ–∂–µ—Å—Ç–≤–æ edge cases)
- ‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ (—Ç—Ä–µ–±—É–µ—Ç explanations)
- ‚ùå –ö–æ–¥-–≥–µ–Ω–µ—Ä–∞—Ü–∏—è (–Ω—É–∂–Ω—ã –ø—Ä–∏–º–µ—Ä—ã –∏ —à–∞–±–ª–æ–Ω—ã)

**–î–ª—è —Ç–∞–∫–∏—Ö –∑–∞–¥–∞—á –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:** `type: algorithm` –∏–ª–∏ `type: combo`

</anti_patterns>

<completion_criteria>
Use case clearly identified, compact type chosen for simple 1-3 step tasks, anti-patterns avoided
</completion_criteria>

### –ê–Ω–∞—Ç–æ–º–∏—è Compact –ü—Ä–æ–º–ø—Ç–∞

<mandatory_structure>

**–û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ compact –ø—Ä–æ–º–ø—Ç–∞:**

```yaml
---
id: prompt-name
type: compact
alwaysApply: true|false
---

# Prompt Title

<prompt_name>

[COMPACT CONTENT HERE]

</prompt_name>
```

**–ö–ª—é—á–µ–≤—ã–µ –æ—Ç–ª–∏—á–∏—è –æ—Ç algorithm/reference:**

- ‚ùå –ù–ï–¢ `[ALGORITHM-BEGIN/END]` –∏–ª–∏ `[REFERENCE-BEGIN/END]`
- ‚ùå –ù–ï–¢ `## TIER N:` —Å–µ–∫—Ü–∏–π
- ‚ùå –ù–ï–¢ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ XML —Ç–µ–≥–æ–≤
- ‚úÖ –û–î–ò–ù —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π XML —Ç–µ–≥ —Å –∏–º–µ–Ω–µ–º –ø—Ä–æ–º–ø—Ç–∞
- ‚úÖ Flat structure —Å **bold** –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
- ‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π YAML (—Ç–æ–ª—å–∫–æ id, type, alwaysApply)

</mandatory_structure>

<core_rules>

### 10 –ø—Ä–∞–≤–∏–ª —Å–æ–∑–¥–∞–Ω–∏—è compact –ø—Ä–æ–º–ø—Ç–æ–≤

**–ò—Å—Ç–æ—á–Ω–∏–∫–∏:** –ü—Ä–∞–∫—Ç–∏–∫–∞ (chat-mode-router 103‚Üí15 —Å—Ç—Ä–æ–∫), 5 –æ—Ç—á–µ—Ç–æ–≤ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏, Web Search 2024-2025, Anthropic Courses, Prompt Engineering Guide

---

**–ü—Ä–∞–≤–∏–ª–æ 1: –û–¥–Ω–∞ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –æ–±–µ—Ä—Ç–∫–∞**

‚úÖ **–ü—Ä–∞–≤–∏–ª—å–Ω–æ:**

```xml
<chat_mode_router>
  [all content here]
</chat_mode_router>
```

‚ùå **–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ:**

```xml
<expert_role>...</expert_role>
<algorithm_steps>...</algorithm_steps>
<completion_criteria>...</completion_criteria>
<exception_handling>...</exception_handling>
```

**–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:** AI –ø–∞—Ä—Å–∏—Ç 1 —Å–µ–∫—Ü–∏—é –≤–º–µ—Å—Ç–æ 5-8 ‚Üí —ç–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ 60-70%

**–ò—Å—Ç–æ—á–Ω–∏–∫:** –í—Å–µ 5 –æ—Ç—á–µ—Ç–æ–≤ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ + Anthropic best practices

---

**–ü—Ä–∞–≤–∏–ª–æ 2: –ò–º–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã**

‚úÖ **–°–∏–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**

- `INSTANT DETECTION - NO FILE READS` (–±–ª–æ–∫–∏—Ä—É–µ—Ç –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è)
- `Check in order, announce immediately` (zero-latency)
- `Execute both` (–ø—Ä—è–º–æ–µ —É–∫–∞–∑–∞–Ω–∏–µ)
- `Required actions` (–æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ)

‚ùå **–°–ª–∞–±—ã–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏:**

- "Please check..." (–ø—Ä–æ—Å—å–±–∞)
- "You should consider..." (–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ)
- "It would be helpful if..." (–Ω–∞–º–µ–∫)
- "Try to..." (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ)

**–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:** –ò–º–ø–µ—Ä–∞—Ç–∏–≤—ã –Ω–∞ 40% –±—ã—Å—Ç—Ä–µ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞—é—Ç—Å—è AI –∫–∞–∫ –∫–æ–º–∞–Ω–¥—ã –∫ –¥–µ–π—Å—Ç–≤–∏—é

**–ò—Å—Ç–æ—á–Ω–∏–∫:** Web Search + Anthropic Courses ("optimization by removing words")

---

**–ü—Ä–∞–≤–∏–ª–æ 3: –ù–µ—Ç TIER —Å—Ç—Ä—É–∫—Ç—É—Ä—ã**

‚ùå **–ò–∑–±—ã—Ç–æ—á–Ω–æ –¥–ª—è compact:**

```markdown
## TIER 1: Expert Role
## TIER 2: Algorithm
## TIER 3: Output Format
```

‚úÖ **Compact –≤–µ—Ä—Å–∏—è:**

```markdown
**INSTANT DETECTION:**
**Execute both:**
**Fallback:**
```

**–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:** –≠–∫–æ–Ω–æ–º–∏—è -40% —Å—Ç—Ä–æ–∫, flat structure —á–∏—Ç–∞–µ—Ç—Å—è –±—ã—Å—Ç—Ä–µ–µ

**–ò—Å—Ç–æ—á–Ω–∏–∫:** –ü—Ä–∞–∫—Ç–∏–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ (103‚Üí15 —Å—Ç—Ä–æ–∫)

---

**–ü—Ä–∞–≤–∏–ª–æ 4: –ù–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —è–∫–æ—Ä–µ–π**

‚ùå **–î–ª—è compact –ù–ï –Ω—É–∂–Ω—ã:**

```markdown
[REFERENCE-BEGIN]
...
[REFERENCE-END]
```

‚úÖ **–ó–∞–º–µ–Ω–∞:** –æ–¥–∏–Ω —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π XML —Ç–µ–≥

**–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:** –Ø–∫–æ—Ä—è –Ω—É–∂–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è algorithm/reference —Ç–∏–ø–æ–≤ –¥–ª—è –º–∞—à–∏–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞

**–ò—Å—Ç–æ—á–Ω–∏–∫:** –ü—Ä–∞–∫—Ç–∏–∫–∞ + 5 –æ—Ç—á–µ—Ç–æ–≤

---

**–ü—Ä–∞–≤–∏–ª–æ 5: –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π exception handling**

‚úÖ **–í—Å—Ç—Ä–æ–∏—Ç—å –≤ –ª–æ–≥–∏–∫—É:**

```markdown
1. Check A ‚Üí do X
2. Check B ‚Üí do Y
3. Otherwise ‚Üí DEFAULT (fallback)
```

‚ùå **–û—Ç–¥–µ–ª—å–Ω–∞—è —Å–µ–∫—Ü–∏—è:**

```xml
<exception_handling>
If A fails: ...
If B unclear: ...
If system unstable: ...
</exception_handling>
```

**–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:** –≠–∫–æ–Ω–æ–º–∏—è -5-10 —Å—Ç—Ä–æ–∫, –ª–æ–≥–∏–∫–∞ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ

**–ò—Å—Ç–æ—á–Ω–∏–∫:** Architect mode –æ—Ç—á–µ—Ç

---

**–ü—Ä–∞–≤–∏–ª–æ 6: –ù–µ—Ç emoji (–∫—Ä–∏—Ç–∏—á–Ω–æ!)**

‚ùå **–ò–∑–±–µ–≥–∞—Ç—å:**

```
‚úÖ PLAN MODE ‚Üí üìñ task-dispatcher.mdc
```

- –ö–∞–∂–¥—ã–π emoji = 2-4 —Ç–æ–∫–µ–Ω–∞
- –ó–∞–º–µ–¥–ª—è–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥

‚úÖ **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å plain text:**

```
PLAN MODE ‚Üí reading task-dispatcher.mdc
```

**–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:** –≠–∫–æ–Ω–æ–º–∏—è ~10-15 —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ –∫–∞–∂–¥—ã–π –≤—ã–≤–æ–¥ √ó –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ = —Ç—ã—Å—è—á–∏ —Ç–æ–∫–µ–Ω–æ–≤

**–ò—Å—Ç–æ—á–Ω–∏–∫:** Web Search + Prompt Engineering Guide (minimalist structures)

---

**–ü—Ä–∞–≤–∏–ª–æ 7: Front-loading –∫—Ä–∏—Ç–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏**

‚úÖ **–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫:**

```markdown
1. **IMPERATIVE TRIGGER** (first line)
2. Core logic (numbered list)
3. Examples (if needed)
4. Notes (optional)
```

‚ùå **–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫:**

```markdown
1. Context and background
2. Motivation
3. Examples
4. Logic (buried at the end)
```

**–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:** AI –Ω–∞—á–∏–Ω–∞–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å—Ä–∞–∑—É, –Ω–µ –¥–æ–∂–∏–¥–∞—è—Å—å –∫–æ–Ω—Ü–∞ –ø—Ä–æ–º–ø—Ç–∞

**–ò—Å—Ç–æ—á–Ω–∏–∫:** Anthropic Courses + Web Search (front-loading pattern)

---

**–ü—Ä–∞–≤–∏–ª–æ 8: –Ø–≤–Ω—ã–µ action items**

‚úÖ **–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:**

```markdown
**Execute both:**
1. **Announce:** Print `MODE ‚Üí reading file.mdc`
2. **Load:** Call read_file("/path/to/file.mdc")
```

‚ùå **–ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ —É–∫–∞–∑–∞–Ω–∏—è:**

```markdown
Then do something with the file if needed
```

**–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:** AI –¥–æ–ª–∂–µ–Ω —Ç–æ—á–Ω–æ –∑–Ω–∞—Ç—å –ß–¢–û –≤—ã–≤–æ–¥–∏—Ç—å –∏ –ß–¢–û –≤—ã–∑—ã–≤–∞—Ç—å

**–ò—Å—Ç–æ—á–Ω–∏–∫:** –í—Å–µ 5 –æ—Ç—á–µ—Ç–æ–≤ (–∫–æ–Ω—Å–µ–Ω—Å—É—Å)

---

**–ü—Ä–∞–≤–∏–ª–æ 9: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π YAML**

‚úÖ **–¢–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –ø–æ–ª—è:**

```yaml
---
id: prompt-name
type: compact
alwaysApply: true
---
```

‚ùå **–ò–∑–±—ã—Ç–æ—á–Ω—ã–µ –ø–æ–ª—è:**

```yaml
use_cases: ['mode_detection', 'routing']
prompt_language: en
response_language: ru
globs: "**/*.mdc"
```

**–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:** –î–ª—è compact —Ç–∏–ø–∞ metadata –º–∏–Ω–∏–º–∞–ª—å–Ω–∞, —ç–∫–æ–Ω–æ–º–∏—è -3-4 —Å—Ç—Ä–æ–∫–∏

**–ò—Å—Ç–æ—á–Ω–∏–∫:** –ü—Ä–∞–∫—Ç–∏–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

---

**–ü—Ä–∞–≤–∏–ª–æ 10: Numbered lists > Prose**

‚úÖ **–°–ø–∏—Å–∫–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:**

```markdown
1. Check A ‚Üí do X
2. Check B ‚Üí do Y
3. Otherwise ‚Üí default
```

‚ùå **Prose —Ñ–æ—Ä–º–∞—Ç:**

```markdown
First, you should check condition A, and if it matches, then you need to do action X. Otherwise, if condition B is true, then perform action Y. In all other cases, use the default behavior.
```

**–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:** –≠–∫–æ–Ω–æ–º–∏—è -50% —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è —Ç–æ–π –∂–µ –ª–æ–≥–∏–∫–∏, —Å–∫–∞–Ω –∑–∞ 1 —Å–µ–∫—É–Ω–¥—É vs 3-5 —Å–µ–∫—É–Ω–¥

**–ò—Å—Ç–æ—á–Ω–∏–∫:** Prompt Engineering Guide + Web Search

</core_rules>

<completion_criteria>
All 10 rules understood and applied, compact prompt structure follows mandatory patterns
</completion_criteria>

## TIER 3: Performance Patterns

<blocking_patterns>

**–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π:**

```markdown
**INSTANT DETECTION - NO FILE READS:**
```

**–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:**

- –†–æ—É—Ç–µ—Ä—ã: –∑–∞–ø—Ä–µ—Ç–∏—Ç—å —á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–æ –¥–µ—Ç–µ–∫—Ü–∏–∏ —Ä–µ–∂–∏–º–∞
- –î–µ—Ç–µ–∫—Ç–æ—Ä—ã: –∑–∞–ø—Ä–µ—Ç–∏—Ç—å API calls –¥–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ª–æ–≤–∏–π
- –í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã: –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–æ –≤–∞–ª–∏–¥–∞—Ü–∏–∏

**–≠—Ñ—Ñ–µ–∫—Ç:** AI –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –î–û –ª—é–±—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π, –Ω–µ —Ç—Ä–∞—Ç–∏—Ç –≤—Ä–µ–º—è –Ω–∞ –ª–∏—à–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏

**–ò—Å—Ç–æ—á–Ω–∏–∫:** Plan mode –æ—Ç—á–µ—Ç

</blocking_patterns>

<zero_latency>

**Zero-latency —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏:**

| –ú–µ–¥–ª–µ–Ω–Ω–æ | –ë—ã—Å—Ç—Ä–æ | –í—ã–∏–≥—Ä—ã—à |
|----------|--------|---------|
| "then" | "immediately" | +30% |
| "If needed, consider doing" | "Execute both" | +50% |
| "You may want to check" | "Check in order" | +40% |
| "Please try to" | "Required actions" | +60% |

**–ü—Ä–∏–Ω—Ü–∏–ø:** –ö–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫–æ–º–∞–Ω–¥–æ–π, –Ω–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º

**–ò—Å—Ç–æ—á–Ω–∏–∫:** Anthropic best practices + Web Search

</zero_latency>

<atomic_operations>

**–ê—Ç–æ–º–∞—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:**

‚úÖ **–û–±—ä–µ–¥–∏–Ω—è—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:**

```markdown
Check ‚Üí Announce ‚Üí Execute (one block)
```

‚ùå **–ù–ï —Ä–∞–∑–¥–µ–ª—è—Ç—å –Ω–∞ —Å–µ–∫—Ü–∏–∏:**

```markdown
### Step 1: Check
### Step 2: Announce  
### Step 3: Execute
```

**–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:** –û–¥–∏–Ω –ø—Ä–æ—Ö–æ–¥ –≤–º–µ—Å—Ç–æ —Ç—Ä–µ—Ö, —ç–∫–æ–Ω–æ–º–∏—è -67% –≤—Ä–µ–º–µ–Ω–∏

**–ò—Å—Ç–æ—á–Ω–∏–∫:** Agent mode –æ—Ç—á–µ—Ç

</atomic_operations>

## TIER 4: –ü—Ä–∏–º–µ—Ä—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

<before_after>

### Case Study: chat-mode-router

**Before (103 —Å—Ç—Ä–æ–∫–∏, 3-5 —Å–µ–∫, –º–µ–¥–ª–µ–Ω–Ω–æ):**

```yaml
---
id: chat-mode-router
type: reference
use_cases: ['mode_detection', 'routing', 'dispatcher']
prompt_language: en
response_language: ru
alwaysApply: true
---

# Chat Mode Router

[REFERENCE-BEGIN]

## TIER 1: Expert Role

<expert_role>
You are a chat mode router that detects Cursor chat mode and routes to appropriate dispatcher.
**–í–ê–ñ–ù–û: –í—Å–µ –æ—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.**
</expert_role>

## TIER 2: Routing Algorithm

<algorithm_motivation>
Fast mode detection and routing ensures correct workflow selection.
</algorithm_motivation>

<cognitive_triggers>
Let's detect the chat mode from system context.
</cognitive_triggers>

<algorithm_steps>

### Step 1: Mode Detection
**Source:** Check `system_reminder` variable
**Detection rules (strict priority):**
1. Plan Mode: contains "Plan mode is active" ‚Üí task-dispatcher.mdc
2. Agent Mode: No Plan marker ‚Üí agent-dispatcher.mdc (default)

<completion_criteria>
Mode detected from system_reminder, priority rules applied
</completion_criteria>

### Step 2: Output Mode
Output format:
- Plan: ‚úÖ PLAN MODE ‚Üí üìñ task-dispatcher.mdc
- Agent: ‚úÖ AGENT MODE ‚Üí üìñ agent-dispatcher.mdc

<completion_criteria>
Mode announced in required format
</completion_criteria>

### Step 3: Load Dispatcher
Call read_file tool with dispatcher filepath.

<completion_criteria>
Dispatcher file loaded, control transferred
</completion_criteria>

</algorithm_steps>

## TIER 3: Mode Routing Table

<routing_table>
| Mode  | Dispatcher File      | Behavior              |
|-------|---------------------|-----------------------|
| Plan  | task-dispatcher.mdc | Planning              |
| Agent | agent-dispatcher.mdc| Autonomous work       |
</routing_table>

<exception_handling>
If system_reminder unavailable: default to Agent mode
If dispatcher file missing: output error message and continue
</exception_handling>

[REFERENCE-END]
```

**After (15 —Å—Ç—Ä–æ–∫, <1 —Å–µ–∫, –º–≥–Ω–æ–≤–µ–Ω–Ω–æ):**

```yaml
---
id: chat-mode-router
type: compact
alwaysApply: true
---

# Chat Mode Router

<chat_mode_router>

**INSTANT DETECTION - NO FILE READS:**

Check in order, announce immediately:

1. mode_specific_rule exists ‚Üí OTHER MODE (follow it, no dispatcher)
2. system_reminder = "Plan mode is active" ‚Üí PLAN MODE (read task-dispatcher.mdc)
3. Otherwise ‚Üí AGENT MODE (read agent-dispatcher.mdc)

**Execute both:**
1. Print: `MODE ‚Üí reading file.mdc`
2. Call: read_file with dispatcher path

</chat_mode_router>
```

**–ú–µ—Ç—Ä–∏–∫–∏ —É–ª—É—á—à–µ–Ω–∏—è:**

| –ú–µ—Ç—Ä–∏–∫–∞ | –î–æ | –ü–æ—Å–ª–µ | –£–ª—É—á—à–µ–Ω–∏–µ |
|---------|-----|-------|-----------|
| –°—Ç—Ä–æ–∫–∏ –∫–æ–¥–∞ | 103 | 15 | **-85%** |
| XML —Å–µ–∫—Ü–∏–∏ | 8 | 1 | **-87%** |
| TIER —É—Ä–æ–≤–Ω–∏ | 3 | 0 | **-100%** |
| –¢–æ–∫–µ–Ω—ã | ~650 | ~100 | **-85%** |
| –°–∫–æ—Ä–æ—Å—Ç—å | 3-5 —Å–µ–∫ | <1 —Å–µ–∫ | **5x faster** |
| Emoji | 6 | 0 | **-100%** |

**–ü—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞:**

- ‚úÖ –ü—Ä–∞–≤–∏–ª–æ 1: –û–¥–Ω–∞ –æ–±–µ—Ä—Ç–∫–∞ `<chat_mode_router>`
- ‚úÖ –ü—Ä–∞–≤–∏–ª–æ 2: –ò–º–ø–µ—Ä–∞—Ç–∏–≤ "INSTANT DETECTION"
- ‚úÖ –ü—Ä–∞–≤–∏–ª–æ 3: –ù–µ—Ç TIER —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
- ‚úÖ –ü—Ä–∞–≤–∏–ª–æ 4: –ù–µ—Ç —è–∫–æ—Ä–µ–π [REFERENCE-BEGIN/END]
- ‚úÖ –ü—Ä–∞–≤–∏–ª–æ 5: –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π fallback (3. Otherwise)
- ‚úÖ –ü—Ä–∞–≤–∏–ª–æ 6: –ù–µ—Ç emoji
- ‚úÖ –ü—Ä–∞–≤–∏–ª–æ 7: Front-loading (–∏–º–ø–µ—Ä–∞—Ç–∏–≤ –ø–µ—Ä–≤—ã–º)
- ‚úÖ –ü—Ä–∞–≤–∏–ª–æ 8: –Ø–≤–Ω—ã–µ action items (Execute both)
- ‚úÖ –ü—Ä–∞–≤–∏–ª–æ 9: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π YAML (3 –ø–æ–ª—è)
- ‚úÖ –ü—Ä–∞–≤–∏–ª–æ 10: Numbered lists

</before_after>

## TIER 5: Quality Gates & Validation

<quality_criteria>

**–ß–µ–∫–ª–∏—Å—Ç –∫–∞—á–µ—Å—Ç–≤–∞ compact –ø—Ä–æ–º–ø—Ç–∞:**

1. ‚úÖ **–†–∞–∑–º–µ—Ä:** 5-25 —Å—Ç—Ä–æ–∫ (–æ–ø—Ç–∏–º—É–º –¥–ª—è —Ä–æ—É—Ç–µ—Ä–æ–≤/–¥–µ—Ç–µ–∫—Ç–æ—Ä–æ–≤)
2. ‚úÖ **XML —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:** –û–¥–∏–Ω —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ–≥ —Å –∏–º–µ–Ω–µ–º –ø—Ä–æ–º–ø—Ç–∞
3. ‚úÖ **–ò–º–ø–µ—Ä–∞—Ç–∏–≤:** –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ = –∫–æ–º–∞–Ω–¥–∞ –¥–µ–π—Å—Ç–≤–∏—è
4. ‚úÖ **–õ–æ–≥–∏–∫–∞:** Numbered list, –Ω–µ prose
5. ‚úÖ **Action items:** –Ø–≤–Ω—ã–µ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏
6. ‚úÖ **–¢–æ–∫–µ–Ω—ã:** –ù–µ—Ç emoji, –º–∏–Ω–∏–º—É–º —Å–ª–æ–≤
7. ‚úÖ **–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:** Front-loaded –∫—Ä–∏—Ç–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
8. ‚úÖ **Fallback:** –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π default case
9. ‚úÖ **YAML:** –¢–æ–ª—å–∫–æ id, type, alwaysApply
10. ‚úÖ **–°–∫–æ—Ä–æ—Å—Ç—å:** –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞ <1 —Å–µ–∫—É–Ω–¥—É

**–ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã 2 –∫—Ä–∏—Ç–µ—Ä–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã:** –ø—Ä–æ–º–ø—Ç —Ç—Ä–µ–±—É–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

</quality_criteria>

<mcp_validation>

**MCP –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª—è compact –ø—Ä–æ–º–ø—Ç–æ–≤:**

**–û—Å–æ–±—ã–µ –ø—Ä–∞–≤–∏–ª–∞:**

- ‚ö†Ô∏è –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è TIER —Å—Ç—Ä—É–∫—Ç—É—Ä—ã (—ç—Ç–æ –¥–ª—è algorithm —Ç–∏–ø–∞)
- ‚ö†Ô∏è –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–∞ XML —Ç–µ–≥–æ–≤
- ‚ö†Ô∏è –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ `<completion_criteria>` –≤ –∫–∞–∂–¥–æ–º —à–∞–≥–µ
- ‚úÖ –§–æ–∫—É—Å –Ω–∞: clarity, performance, conciseness

**–î–æ–ø—É—Å—Ç–∏–º—ã–µ scores:**

- 60-80: –•–æ—Ä–æ—à–æ, –µ—Å–ª–∏ —Ä–∞–∑–º–µ—Ä –æ–ø—Ç–∏–º–∞–ª–µ–Ω –∏ –ª–æ–≥–∏–∫–∞ —è—Å–Ω–∞
- 80-90: –û—Ç–ª–∏—á–Ω–æ, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ + –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
- 90-100: –ò–¥–µ–∞–ª—å–Ω–æ (—Ä–µ–¥–∫–æ –¥–ª—è compact)

**–ö—Ä–∏—Ç–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏ (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å 0):**

- –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ action items
- –ù–µ—è—Å–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–æ—É—Ç–∏–Ω–≥–∞
- –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π

</mcp_validation>

<sources>

**–ò—Å—Ç–æ—á–Ω–∏–∫–∏ best practices:**

1. **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –æ–ø—ã—Ç:** chat-mode-router –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è (103‚Üí15 —Å—Ç—Ä–æ–∫, -85%)
2. **–û—Ç—á–µ—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:** 5 —Ä–µ–∂–∏–º–æ–≤ (Plan/Agent/Ask x2/Architect)
3. **Web Search 2024-2025:** prompt optimization, compact structures, imperative commands
4. **Anthropic Courses:** /anthropics/courses - "optimization by removing words"
5. **Prompt Engineering Guide:** /dair-ai/prompt-engineering-guide - minimalist patterns

**–î–∞—Ç–∞:** 2025-10-22

</sources>

[REFERENCE-END]
